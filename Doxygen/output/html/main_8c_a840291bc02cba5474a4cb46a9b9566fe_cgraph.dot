digraph "main"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="main",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="I2C_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a089c79c287c6a76c91347e063a5773c7",tooltip="Configures the I2C port based on the input parameters. Also, internally this function configures the ..."];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="GPIO_clockGating",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#a621b0dc3536c64501a7a6c560b667355",tooltip="This function enables the GPIO clock by configuring the corresponding bit and register in the System ..."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="GPIO_pinControlRegister",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_g_p_i_o_8c.html#ab7610a9d041c1c33f8a3fbf348bf80ef"];
  Node0 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="UART_init",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#af312cd24d880141abdd9c6bb99bd67c1",tooltip="It configures the UART to be used. "];
  Node0 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="UART0_interruptEnable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#a4209eb4659ab4ef5d7d6a88fef304e51",tooltip="enables the RX UART interrupt). This function should include the next sentence: while (!(UART0_S1 & U..."];
  Node0 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="NVIC_enableInterruptAndPriotity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_n_v_i_c_8c.html#a1a4e74e5f147d23a9070d864c4f20606",tooltip="This function enables a IRQ in the NVIC and establishes its priority. "];
  Node0 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="FirstMenu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_tera_term_write_8c.html#ad38dc59a6f7a64288fb468dde2f10178",tooltip="This function Prints the first Menu . "];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="UART_putString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#af95ee594ce5f1619abbe4f2393b1903e",tooltip="It sends a string character through the serial port. "];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="UART_putChar",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#ae69fe2846b6410c22876356a9b3f0083",tooltip="It sends one character through the serial port. This function should include the next sentence: while..."];
  Node0 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="setHourFormat_RTC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_r_t_c_8c.html#ad25859809cb0365904b677fecfafb59c",tooltip="This function converts the current time into the format specified. "];
  Node10 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="I2C_TX_RX_Mode",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a6a531e51c74e4d9ecf32f086aef3259f",tooltip="It selects between transmitter mode or receiver mode. "];
  Node10 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="I2C_start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a09d9820de1e99617f206ef60a9a9d2e8",tooltip="Generates the start signal. When MST bit is changed from 0 to 1, a START signal is generated on the b..."];
  Node10 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="delay",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_global_functions_8c.html#aa7fa622ced5687f8351d589e9402b251"];
  Node13 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="I2C_write_Byte",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#ad6927c971148447061c3f950362beada",tooltip="It writes the data to be transmitted into the transmission buffer. When you want to write a value int..."];
  Node10 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="I2C_wait",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a05143bfcf3eeb04ec1dfc7e4ab952689",tooltip="Indicates the status of the bus regardless of slave or master mode. Internally checks the busy bit in..."];
  Node10 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="I2C_get_ACK",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a2978351c0f1c3e3057fffc151b097ed8",tooltip="Indicates if the acknowledge was received. "];
  Node10 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="I2C_repeted_Start",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#a577158ebfa27fcb673a5727e95d2d853",tooltip="It generates a repeated start that is needed when master reads data. "];
  Node10 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="I2C_NACK",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_i2_c___driver_8c.html#aae489f3896588f59173688541155aa32",tooltip="It generates the Not ACKnowledge that is needed when the master reads data. "];
  Node0 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="setTime_RTC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_r_t_c_8c.html#afdac47cf1579b183b16a6b7d46c533f1",tooltip="This function writes the time received in the RTC hour, minute, and seconds byte. ..."];
  Node0 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="setDate_RTC",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_r_t_c_8c.html#a3bf8833d90144c519e201c57e1d836dc",tooltip="This function writes the date received in the RTC year, month, and day byte. "];
  Node0 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="InitMenu",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_u_a_r_t_8c.html#a46d1ead324424fe8ae8d03869122b22f",tooltip="This function printf the init menu and takes a value to call a new function. "];
  Node21 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="choose_function",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$_function_rotate_8c.html#a69cfcb15cb76c8ceaf68316786632c1a",tooltip="This function point to another function dependying of variable State. "];
}
